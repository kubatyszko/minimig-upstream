                        * Copyright 2006, 2007 Dennis van Weeren
                        *
                        * This file is part of Minimig
                        *
                        * Minimig is free software; you can redistribute it and/or modify
                        * it under the terms of the GNU General Public License as published by
                        * the Free Software Foundation; either version 3 of the License, or
                        * (at your option) any later version.
                        *
                        * Minimig is distributed in the hope that it will be useful,
                        * but WITHOUT ANY WARRANTY; without even the implied warranty of
                        * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        * GNU General Public License for more details.
                        *
                        * You should have received a copy of the GNU General Public License
                        * along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        *Some amiga register definitions
00000018                SERDATR	equ	$018
00000032                SERPER	equ	$032
00000030                SERDAT	equ	$030
0000009c                INTREQ	equ	$09c
0000001e                INTREQR	equ	$01e
00dff000                CUSTOM	equ	$dff000
0000009a                INTENA	equ	$09a
0000001c                INTENAR	equ	$01c
00bfe001                CIAA	equ	$bfe001
00bfd000                CIAB	equ	$bfd000
                        
00000000                CIAPRA	equ	$000	
00000100                CIAPRB	equ	$100
00000200                CIADDRA	equ	$200
00000300                CIADDRB	equ	$300	
00000400                CIATALO	equ	$400
00000500                CIATAHI	equ	$500
00000600                CIATBLO	equ	$600
00000700                CIATBHI	equ	$700
00000800                CIATODLOW equ	$800
00000900                CIATODMID equ	$900
00000a00                CIATODHI equ	$a00
00000c00                CIASDR	equ	$c00
00000d00                CIAICR	equ	$d00
00000e00                CIACRA	equ	$e00
00000f00                CIACRB	equ	$f00
                        
00000004                VPOSR	equ	$004
00000092                DDFSTRT	equ	$092
00000094                DDFSTOP	equ	$094
0000008e                DIWSTRT	equ	$08e
00000090                DIWSTOP	equ	$090
00000108                BPL1MOD	equ	$108
0000010a                BPL2MOD	equ	$10a
                        
00000080                COP1LCH	equ	$080
00000084                COP2LCH	equ	$084
00000088                COPJMP1 equ	$088
0000008a                COPJMP2	equ	$08a
                        
                        
00000110                BPL1DAT	equ	$110
000000e0                BPL1PTH	equ	$0e0
000000e2                BPL1PTL	equ	$0e2
000000e4                BPL2PTH	equ	$0e4
000000e6                BPL2PTL	equ	$0e6
000000e8                BPL3PTH	equ	$0e8
000000ea                BPL3PTL	equ	$0ea
000000ec                BPL4PTH	equ	$0ec
000000ee                BPL4PTL	equ	$0ee
00000100                BPLCON0	equ	$100
00000102                BPLCON1	equ	$102
00000104                BPLCON2	equ	$104
00000180                COLOR00	equ	$180
00000182                COLOR01	equ	$182
00000184                COLOR02	equ	$184
00000186                COLOR03	equ	$186
00000192                COLOR09 equ	$192
00000194                COLOR10 equ	$194
00000196                COLOR11 equ	$196
                        
00000096                DMACON	equ	$096
00000002                DMACONR	equ	$002
                        
00000044                BLTAFWM	equ	$044
00000046                BLTALWM	equ	$046
00000040                BLTCON0	equ	$040
00000042                BLTCON1	equ	$042
00000058                BLTSIZE	equ	$058
                        
00000064                BLTAMOD	equ	$064
00000062                BLTBMOD	equ	$062
00000060                BLTCMOD	equ	$060
00000066                BLTDMOD	equ	$066
                        
00000074                BLTADAT	equ	$074
00000072                BLTBDAT	equ	$072
00000070                BLTCDAT	equ	$070
                        
00000050                BLTAPTH	equ	$050
0000004c                BLTBPTH	equ	$04c
00000048                BLTCPTH	equ	$048
00000054                BLTDPTH	equ	$054
                        
00000024                DSKLEN	equ	$024
00000020                DSKPTH	equ	$020
0000007e                DSKSYNC	equ	$07e
0000009e                ADKCON	equ	$09e
                        
                        
                        * Code starts here
                        
00000000                	org	$0
                        
00000000 0007 0100      	dc.W	$0007,$0100		;initial stack pointer
00000004 0000 0100      	dc.W	$0000,$0100		;reset pointer
                        
00000100                	org	$100
                        
00000100 41f9 00df f000 Start:	lea	CUSTOM,a0		;pointer to chip registers
00000106 43f9 00bf e001 	lea	CIAA,a1			;pointer to ciaa
0000010c 45f9 00bf d000 	lea	CIAB,a2			;pointer to ciab
00000112 47f9 00f8 0000 	lea	$f80000,a3		;pointer to chipram area
                        
00000118 157c 00f7 0100 	move.b	#$f7,CIAPRB(a2)		;select drive 0
0000011e 157c 00ff 0300 	move.b	#$ff,CIADDRB(a2)	;make drive control signals output
00000124 317c 001e 0032 	move.W	#30,SERPER(a0)		;set baud to 115200 @ 3.547 MHz
0000012a 317c 7000 009a 	move.W	#$7000,INTENA(a0)	;disable all intterupts
00000130 317c 7fff 009c 	move.w	#$7fff,INTREQ(a0)	;clear all intterupts
00000136 317c 8210 0096 	move.w	#$8210,DMACON(a0)	;enable only disk dma
0000013c 317c 7fff 009e 	move.w	#$7fff,ADKCON(a0)	;clear ADKCON
                        	
                        ***************************************************************************
                        *load kickstart from disk
                        ***************************************************************************
00000142 6100 0028      	bsr	Trck0			;go to track 0
00000146 08aa 0001 0100 	bclr	#1,CIAPRB(a2)		;step upwards
                        	
0000014c 6100 003a      BootL	bsr	Rd16k			;read track into buffer
00000150 6100 0062      	bsr	Cpy16k			;copy buffer to kickstart area
00000154 b7fc 0100 0000 	cmp.l	#$1000000,a3		;all data done ?
0000015a 6700 0070      	beq	Exit			;yes --> exit boot code
0000015e 08aa 0000 0100 	bclr	#0,CIAPRB(a2)		;no  --> load next track
00000164 08ea 0000 0100 	bset	#0,CIAPRB(a2)
0000016a 60e0           	bra	BootL
                        
                        ***************************************************************************
                        * go to track0
                        ***************************************************************************
0000016c 103c 00ff      Trck0	move.b	#255,d0			;256 _step pulses
00000170 08ea 0001 0100 	bset	#1,CIAPRB(a2)		;step towards track 0
                        	
00000176 08aa 0000 0100 Trck0L	bclr	#0,CIAPRB(a2)		;pulse _step
0000017c 08ea 0000 0100 	bset	#0,CIAPRB(a2)
00000182 51c8 fff2      	dbra	d0,Trck0L
00000186 4e75           	rts
                        
                        ***************************************************************************
                        *read 16kbyte block from disk into the chipram buffer
                        ***************************************************************************
00000188 217c 0001 0000 Rd16k	move.l	#$10000,DSKPTH(a0)	;pointer to chipram buffer
         0020
00000190 317c 0002 009c 	move.w	#$0002,INTREQ(a0)	;clear interrupt
00000196 317c a000 0024 	move.w	#$a000,DSKLEN(a0)	;start disk dma
0000019c 317c a000 0024 	move.w	#$a000,DSKLEN(a0)
000001a2 3028 001e      Rd16kL	move.w	INTREQR(a0),d0		;wait for disk dma to finish
000001a6 c07c 0002      	and.w	#$0002,d0
000001aa 67f6           	beq	Rd16kL
000001ac 317c 4000 0024 	move.w	#$4000,DSKLEN(a0)	;stop disk dma
000001b2 4e75           	rts
                        
                        ***************************************************************************
                        *copy 16kbyte from the chipram buffer into the kickstart area
                        ***************************************************************************
000001b4 303c 0fff      Cpy16k	move.w	#4095,d0		;4096 words
000001b8 49f9 0001 0000 	lea	$10000,a4		;pointer to chipram buffer
000001be 221c           Cpy16kL	move.l	(a4)+,d1		;copy one word
000001c0 26c1           	move.l	d1,(a3)+		;still copying one word
000001c2 3141 0180      	move.w	d1,COLOR00(a0)		;funny screen flash
000001c6 51c8 fff6      	dbra	d0,Cpy16kL
000001ca 4e75           	rts
                        			
                        ***************************************************************************
                        * exit boot code
                        ***************************************************************************
000001cc 13c0 00bf c000 Exit	move.b	d0,$bfc000		;access both cia's at once, this will end boot code
000001d2 60f8           	bra	Exit
                        
                        			
                        
                        	
                        
                        

 =====     0 Error(s)
 =====     0 Warning(s)
